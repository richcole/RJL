# tokens

arg_ident  = /[A-za-z0-9:]+:/ ;
ident      = /[A-za-z0-9_:]+[A-za-z0-9_]/ ;
string     = /"([^\\"]|'\\")*"/ ;
int        = /-?[0-9]+/ ;
float      = /-?[0-9]+\.[0-9]+('e''-'?[0-9]+)?/ ;

# grammar

block := '{' argument_list? statement_list '}' ;

argument_list := ident+ '|' ;

statement_list := statement ';' statement_list ;
statement_list := ;

if_statement := 
  'if' '(' expr ')' block_statement 
    ( 'elseif' block_statement )*
    [ 'else' block_statement ] 
;

while_statement := 'while' '(' expr ')' block_statement ;

statement := if_statement | while_statement | expr;

expr  := '(' expr ') ;
expr  := 'return' expr ;
expr  := '(|' statement_list '|)' ;
expr  := '[' statement_list ']' ;
expr  := '{' statement_list '}';

expr := ident ;
expr := expr op expr ;
expr := arg_ident expr ; 
expr := arg_ident expr;

